In dem erweiterten Petrinetz ist auf der linken Seite der Sender und auf der rechten der Receiver zu erkennen. Um 1-Bit-Nachrichten von 0-Bit-Nachrichten unterscheiden zu können wird eine unterschiedliche Anzahl an Tokens verwendet. Für 1-Bit-Nachrichten werden zwei Tokens gesendet und für 0-Bit-Nachrichten ein Token. Weiterhin gibt es für den Versand der jeweiligen Nachricht einen Kanal vom Sender zum Receiver und vom Receiver zum Sender. Die 1-Bit-Nachrichten vom Sender werden über den obigen Kanal versandt, während die 1-Bit-Acknowledge-Nachrichten vom Receiver über den unteren Kanal verschickt werden. Die 0-Bit-Nachrichten vom Sender verlaufen über den zweiten Kanal von oben, während die 0-Bit-Acknowledge-Nachrichten vom Receiver über den zweiten Kanal von unten verschickt werden. Zu Beginn liegen zwei Tokens beim Sender, sodass mit dem Versand von 1-Bit-Nachrichten begonnen wird. Ferner gibt es jeweils einen Token auf den Stellen \textit{S\_B1\_State} und \textit{R\_B1\_State}, um den Zustand des Senders bzw. Receivers zu definieren.

Zunächst befinden sich beide im Zustand für 1-Bit-Nachrichten. Im erweiterten Netz werden beim Sender und Receiver zudem \textit{Equal-Arcs} (erkennbar an den zwei Punkten am Ende der jeweiligen Kante) genutzt, damit unterschieden werden kann, ob eine 1- oder 0-Bit-Nachricht zum Versand vorliegt. Über die Transition \textit{S\_R\_B1\_0} wird die erste 1-Bit-Nachricht an den Receiver versandt. Durch die Rückkopplung zum Sender, wird gewährleistet, dass der Sender kontinuierlich 1-Bit-Nachrichten verschickt. Gleiches gilt für die Transition \textit{S\_R\_B0\_0}. Auf Receiver-Seite wird die Rückkopplung durch die Transitionen \textit{R\_S\_B1\_0} und \textit{R\_S\_B0\_0} gewährleistet. Dies bedingt allerdings, dass auf beiden Seiten eine Art Switch vorliegen muss. Dies bedeutet, dass bei Empfang einer Nachricht der Sender bzw. Receiver die "überschüssigen" Tokens abführen und einen Zustandswechsel vornehmen muss. Dies geschieht jeweils durch die Transitionen \textit{S\_Switch\_B1\_To\_B0}, \textit{S\_Switch\_B0\_To\_B1} auf Sender-Seite sowie den Transitionen \textit{R\_Switch\_B1\_To\_B0} und \textit{R\_Switch\_B0\_To\_B1} auf Receiver-Seite. Dadurch, dass zu Beginn kein Token beim Receiver vorliegt, gibt es die Transition \textit{R\_First\_B1\_Receive\_Reset}. Diese wird einmalig beim ersten Empfang einer 1-Bit-Nachricht geschaltet und reduziert die Anzahl der empfangenen Tokens beim Receiver auf zwei. Der Receiver empfängt bei 1-Bit-Nachrichten vier Tokens, damit dieser im weiteren Verlauf, wenn er sich im 0-Bit-Nachrichten-Zustand befindet und dadurch immer ein Token auf der Receiver-Stelle liegt, die "überschüssigen" Tokens abführen kann. Diese Unterscheidung wird zudem auf Sender-Seite beim Empfang von 0-Bit-Acknowledge-Nachrichten vorgenommen, indem der Sender drei Tokens von der Transition \textit{R\_S\_B0\_1} erhält.

Durch das Einfügen der Stellen \textit{S\_Lost\_Or\_Forward\_B1}, \textit{S\_Lost\_Or\_Forward\_B0} auf Sender-Seite sowie \textit{R\_Lost\_Or\_Forward\_B1} und \textit{R\_Lost\_Or\_Forward\_B0} auf Receiver-Seite wird simuliert, dass auch Nachrichten verloren gehen können. Durch die jeweiligen \textit{Reset-Arcs} (erkennbar an den zwei Pfeilen am Ende der jeweiligen Kante), wird sichergestellt, dass sich auf der jeweiligen Stelle keine Tokens (Nachrichten) ansammeln. Diese werden beim Schalten der Transitionen \textit{S\_Lost\_B1}, \textit{S\_Lost\_B0} beim Sender sowie beim Schalten von \textit{R\_Lost\_B1} und \textit{R\_Lost\_B0} durch die \textit{Reset-Arc} gelöscht. Die Stellen \textit{R\_B1\_State}, \textit{R\_B0\_State} auf Receiver-Seite und \textit{S\_B1\_State} und \textit{S\_B0\_State} gewährleisten, dass im 1- bzw. 0-Bit-Nachrichten-Zustand nur einmal an den Receiver bzw. Sender versandt werden und die jeweilige Nachricht dort nicht doppelt ankommt. Der Zustandswechsel findet jeweils statt, sobald der Sender die Acknowledge-Nachricht empfängt bzw. der Receiver eine 1- bzw. 0-Bit-Nachricht erhält.