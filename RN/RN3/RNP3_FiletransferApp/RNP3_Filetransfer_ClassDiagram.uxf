<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.1">
  <zoom_level>7</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>609</x>
      <y>518</y>
      <w>84</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
connect to ^



*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>154</x>
      <y>651</y>
      <w>231</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
responsible for &gt;</panel_attributes>
    <additional_attributes>310.0;130.0;10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>126</x>
      <y>441</y>
      <w>56</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
using v</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>217</x>
      <y>245</y>
      <w>301</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
m2=1
&lt; using</panel_attributes>
    <additional_attributes>10.0;20.0;410.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>371</x>
      <y>644</y>
      <w>560</w>
      <h>546</h>
    </coordinates>
    <panel_attributes>client::FileCopyClient
--
+TEST_OUTPUT_MODE: boolean
+SERVER_PORT: int
+CLIENTCOPY_PORT: int
+UDP_PACKET_SIZE: int
+servername: java.lang.String
+sourcePath: java.lang.String
+destPath: java.lang.String
+windowSize: int
+serverErrorRate: long
-timeoutValue: long
-MAXTIMEOUTVALUE: long
-RTT: long
-SRTT: long
-RTTVAR: long
-measurementPrecision: long
-client: java.net.DatagramSocket
-connectionEstablished: boolean
-raCl: client.FileCopyClient$ReceiveAckClient
-readFileInput: java.io.FileInputStream
-justReaded: int
-needsToRead: int
-eofReached: boolean
-sendBuf: java.util.List
-accessBuffer: java.util.concurrent.Semaphore
-sendbase: int
-nextSeqNum: int
-totalTransmissionTime: long
-totalTimerInterrupts: int
-totalReceivedAcks: int
-midRTTForAllAcks: long
--
~FileCopyClient(): ctor
+FileCopyClient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String): ctor
+runFileCopyClient(): void
-readFile(): void
-storePacketsInSendBuffer(int): void
-sendNextSeqNumPacket(): void
+startTimer(fc_adt.FCpacket): void
+startTimerOnRetransmit(fc_adt.FCpacket): void
+cancelTimer(fc_adt.FCpacket): void
+timeoutTask(long): void
+computeTimeoutValue(): void
+computeTimeoutValue(long): void
+makeControlPacket(): fc_adt.FCpacket
+testOut(java.lang.String): void
+main(java.lang.String[]): void
-writeLogFile(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>357</x>
      <y>1260</y>
      <w>539</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>client::FileCopyClient$ReceiveAckClient
--
-isInterrupted: boolean
--
+run(): void
-ackReceivedPacket(fc_adt.FCpacket): void
-moveSendbase(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>532</x>
      <y>1183</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>504</x>
      <y>217</y>
      <w>315</w>
      <h>308</h>
    </coordinates>
    <panel_attributes>server::FileCopyServer
--
+TEST_OUTPUT_MODE: boolean
+SERVER_PORT: int
+UDP_PACKET_SIZE: int
+CONNECTION_TIMEOUT: int
+DELAY: long
+windowSize: int
+destPath: java.lang.String
+errorRate: long
-clientAdress: java.net.InetAddress
-clientPort: int
-serverSocket: java.net.DatagramSocket
-receiveData: byte[]
-recBuf: java.util.LinkedList
-outToFile: java.io.FileOutputStream
+rcvbase: long
-recPacketCounter: long
--
+FileCopyServer(): ctor
+runFileCopyServer(): void
-sendAck(fc_adt.FCpacket): void
-insertPacketintoBuffer(fc_adt.FCpacket): void
-deliverBufferPackets(): void
-writePacket(fc_adt.FCpacket): void
-setParameters(fc_adt.FCpacket): boolean
-testOut(java.lang.String): void
+main(java.lang.String[]): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>462</x>
      <y>49</y>
      <w>434</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>server::FileCopyServer$sendThread
--
~packet: java.net.DatagramPacket
~this$0: server.FileCopyServer
--
+FileCopyServer$sendThread(server.FileCopyServer, java.net.DatagramPacket): ctor
+run(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>665</x>
      <y>126</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>0</y>
      <w>189</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>fc_adt::FCpacket
--
-data: byte[]
-dataLen: int
-seqNumber: long
-seqNumberBytes: byte[]
-timer: fc_adt.FC_Timer
-validACK: boolean
-timestamp: long
-timeout: long
-retransmit: boolean
--
+FCpacket(long, byte[], int): ctor
+FCpacket(byte[], int): ctor
+toString(): java.lang.String
+setTimestamp(long): void
+setTimer(fc_adt.FC_Timer): void
+getData(): byte[]
+getLen(): int
+getSeqNum(): long
+getSeqNumBytes(): byte[]
+getSeqNumBytesAndData(): byte[]
+getTimestamp(): long
+getTimer(): fc_adt.FC_Timer
+isValidACK(): boolean
+setValidACK(boolean): void
+getTimeout(): long
+setTimeout(long): void
+isRetransmit(): boolean
+setRetransmit(boolean): void
+compareTo(fc_adt.FCpacket): int
+hashCode(): int
+equals(java.lang.Object): boolean
-reduce(byte[], int, int): byte[]
-concatenate(byte[], byte[]): byte[]
-makeLong(byte[], int, int): long
-writeBytes(long, byte[], int, int): void
+compareTo(java.lang.Object): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>546</y>
      <w>252</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>fc_adt::FC_Timer
--
-myFCC: client.FileCopyClient
-delay: long
-seqNum: long
-isCancelled: boolean
--
+FC_Timer(long, client.FileCopyClient, long): ctor
+run(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>217</x>
      <y>371</y>
      <w>245</w>
      <h>287</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
m2=1
&lt; using</panel_attributes>
    <additional_attributes>10.0;20.0;330.0;20.0;330.0;390.0</additional_attributes>
  </element>
</diagram>
